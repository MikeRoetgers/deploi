// Code generated by protoc-gen-go.
// source: server.proto
// DO NOT EDIT!

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	server.proto

It has these top-level messages:
	CreateUserRequest
	User
	LoginRequest
	LoginResponse
	GetJobsRequest
	GetJobsResponse
	Job
	Environment
	RegisterEnvironmentRequest
	GetEnvironmentResponse
	DeleteEnvironmentRequest
	DeployRequest
	DeployResponse
	RegisterAutomationRequest
	GetAutomationsRequest
	GetAutomationsResponse
	DeleteAutomationRequest
	Automation
	BranchAutomation
	GetProjectsResponse
	GetBuildsRequest
	GetBuildsResponse
	NewBuildRequest
	NextJobRequest
	NextJobResponse
	JobDoneRequest
	Build
	Project
	StandardRequest
	StandardResponse
	RequestHeader
	ResponseHeader
	Error
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateUserRequest struct {
	Header   *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Email    string         `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Password string         `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateUserRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type User struct {
	Email        string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	PasswordHash []byte `protobuf:"bytes,2,opt,name=passwordHash,proto3" json:"passwordHash,omitempty"`
	CreatedAt    int64  `protobuf:"varint,3,opt,name=createdAt" json:"createdAt,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPasswordHash() []byte {
	if m != nil {
		return m.PasswordHash
	}
	return nil
}

func (m *User) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type LoginRequest struct {
	Header   *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Username string         `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Password string         `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LoginRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Token  string          `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LoginResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetJobsRequest struct {
	Header  *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Pending bool           `protobuf:"varint,2,opt,name=pending" json:"pending,omitempty"`
	Id      string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *GetJobsRequest) Reset()                    { *m = GetJobsRequest{} }
func (m *GetJobsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetJobsRequest) ProtoMessage()               {}
func (*GetJobsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetJobsRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetJobsRequest) GetPending() bool {
	if m != nil {
		return m.Pending
	}
	return false
}

func (m *GetJobsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetJobsResponse struct {
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Jobs   []*Job          `protobuf:"bytes,2,rep,name=jobs" json:"jobs,omitempty"`
}

func (m *GetJobsResponse) Reset()                    { *m = GetJobsResponse{} }
func (m *GetJobsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetJobsResponse) ProtoMessage()               {}
func (*GetJobsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetJobsResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetJobsResponse) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type Job struct {
	Id          string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Environment *Environment `protobuf:"bytes,2,opt,name=environment" json:"environment,omitempty"`
	Build       *Build       `protobuf:"bytes,3,opt,name=build" json:"build,omitempty"`
	CreatedAt   int64        `protobuf:"varint,4,opt,name=createdAt" json:"createdAt,omitempty"`
	FinishedAt  int64        `protobuf:"varint,5,opt,name=finishedAt" json:"finishedAt,omitempty"`
	Output      []byte       `protobuf:"bytes,6,opt,name=output,proto3" json:"output,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetEnvironment() *Environment {
	if m != nil {
		return m.Environment
	}
	return nil
}

func (m *Job) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *Job) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Job) GetFinishedAt() int64 {
	if m != nil {
		return m.FinishedAt
	}
	return 0
}

func (m *Job) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

type Environment struct {
	Name       string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespaces []string `protobuf:"bytes,2,rep,name=namespaces" json:"namespaces,omitempty"`
}

func (m *Environment) Reset()                    { *m = Environment{} }
func (m *Environment) String() string            { return proto.CompactTextString(m) }
func (*Environment) ProtoMessage()               {}
func (*Environment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Environment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Environment) GetNamespaces() []string {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

type RegisterEnvironmentRequest struct {
	Header      *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Environment *Environment   `protobuf:"bytes,2,opt,name=environment" json:"environment,omitempty"`
}

func (m *RegisterEnvironmentRequest) Reset()                    { *m = RegisterEnvironmentRequest{} }
func (m *RegisterEnvironmentRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterEnvironmentRequest) ProtoMessage()               {}
func (*RegisterEnvironmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RegisterEnvironmentRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RegisterEnvironmentRequest) GetEnvironment() *Environment {
	if m != nil {
		return m.Environment
	}
	return nil
}

type GetEnvironmentResponse struct {
	Header       *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Environments []*Environment  `protobuf:"bytes,2,rep,name=environments" json:"environments,omitempty"`
}

func (m *GetEnvironmentResponse) Reset()                    { *m = GetEnvironmentResponse{} }
func (m *GetEnvironmentResponse) String() string            { return proto.CompactTextString(m) }
func (*GetEnvironmentResponse) ProtoMessage()               {}
func (*GetEnvironmentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetEnvironmentResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetEnvironmentResponse) GetEnvironments() []*Environment {
	if m != nil {
		return m.Environments
	}
	return nil
}

type DeleteEnvironmentRequest struct {
	Header      *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Environment *Environment   `protobuf:"bytes,2,opt,name=environment" json:"environment,omitempty"`
}

func (m *DeleteEnvironmentRequest) Reset()                    { *m = DeleteEnvironmentRequest{} }
func (m *DeleteEnvironmentRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteEnvironmentRequest) ProtoMessage()               {}
func (*DeleteEnvironmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeleteEnvironmentRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteEnvironmentRequest) GetEnvironment() *Environment {
	if m != nil {
		return m.Environment
	}
	return nil
}

type DeployRequest struct {
	Header      *RequestHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Project     string            `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
	BuildId     string            `protobuf:"bytes,3,opt,name=buildId" json:"buildId,omitempty"`
	Environment string            `protobuf:"bytes,4,opt,name=environment" json:"environment,omitempty"`
	Namespace   string            `protobuf:"bytes,5,opt,name=namespace" json:"namespace,omitempty"`
	Files       map[string]string `protobuf:"bytes,6,rep,name=files" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *DeployRequest) Reset()                    { *m = DeployRequest{} }
func (m *DeployRequest) String() string            { return proto.CompactTextString(m) }
func (*DeployRequest) ProtoMessage()               {}
func (*DeployRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeployRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeployRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *DeployRequest) GetBuildId() string {
	if m != nil {
		return m.BuildId
	}
	return ""
}

func (m *DeployRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *DeployRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeployRequest) GetFiles() map[string]string {
	if m != nil {
		return m.Files
	}
	return nil
}

type DeployResponse struct {
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	JobId  string          `protobuf:"bytes,2,opt,name=jobId" json:"jobId,omitempty"`
}

func (m *DeployResponse) Reset()                    { *m = DeployResponse{} }
func (m *DeployResponse) String() string            { return proto.CompactTextString(m) }
func (*DeployResponse) ProtoMessage()               {}
func (*DeployResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *DeployResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeployResponse) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type RegisterAutomationRequest struct {
	Header     *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Automation *Automation    `protobuf:"bytes,2,opt,name=automation" json:"automation,omitempty"`
}

func (m *RegisterAutomationRequest) Reset()                    { *m = RegisterAutomationRequest{} }
func (m *RegisterAutomationRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterAutomationRequest) ProtoMessage()               {}
func (*RegisterAutomationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RegisterAutomationRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RegisterAutomationRequest) GetAutomation() *Automation {
	if m != nil {
		return m.Automation
	}
	return nil
}

type GetAutomationsRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *GetAutomationsRequest) Reset()                    { *m = GetAutomationsRequest{} }
func (m *GetAutomationsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAutomationsRequest) ProtoMessage()               {}
func (*GetAutomationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *GetAutomationsRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type GetAutomationsResponse struct {
	Header      *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Automations []*Automation   `protobuf:"bytes,2,rep,name=automations" json:"automations,omitempty"`
}

func (m *GetAutomationsResponse) Reset()                    { *m = GetAutomationsResponse{} }
func (m *GetAutomationsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAutomationsResponse) ProtoMessage()               {}
func (*GetAutomationsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *GetAutomationsResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetAutomationsResponse) GetAutomations() []*Automation {
	if m != nil {
		return m.Automations
	}
	return nil
}

type DeleteAutomationRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id     string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteAutomationRequest) Reset()                    { *m = DeleteAutomationRequest{} }
func (m *DeleteAutomationRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAutomationRequest) ProtoMessage()               {}
func (*DeleteAutomationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *DeleteAutomationRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteAutomationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Automation struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Types that are valid to be assigned to Automation:
	//	*Automation_BranchAutomation
	Automation isAutomation_Automation `protobuf_oneof:"automation"`
}

func (m *Automation) Reset()                    { *m = Automation{} }
func (m *Automation) String() string            { return proto.CompactTextString(m) }
func (*Automation) ProtoMessage()               {}
func (*Automation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type isAutomation_Automation interface {
	isAutomation_Automation()
}

type Automation_BranchAutomation struct {
	BranchAutomation *BranchAutomation `protobuf:"bytes,2,opt,name=branchAutomation,oneof"`
}

func (*Automation_BranchAutomation) isAutomation_Automation() {}

func (m *Automation) GetAutomation() isAutomation_Automation {
	if m != nil {
		return m.Automation
	}
	return nil
}

func (m *Automation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Automation) GetBranchAutomation() *BranchAutomation {
	if x, ok := m.GetAutomation().(*Automation_BranchAutomation); ok {
		return x.BranchAutomation
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Automation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Automation_OneofMarshaler, _Automation_OneofUnmarshaler, _Automation_OneofSizer, []interface{}{
		(*Automation_BranchAutomation)(nil),
	}
}

func _Automation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Automation)
	// automation
	switch x := m.Automation.(type) {
	case *Automation_BranchAutomation:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BranchAutomation); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Automation.Automation has unexpected type %T", x)
	}
	return nil
}

func _Automation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Automation)
	switch tag {
	case 2: // automation.branchAutomation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BranchAutomation)
		err := b.DecodeMessage(msg)
		m.Automation = &Automation_BranchAutomation{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Automation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Automation)
	// automation
	switch x := m.Automation.(type) {
	case *Automation_BranchAutomation:
		s := proto.Size(x.BranchAutomation)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BranchAutomation struct {
	Project     string       `protobuf:"bytes,1,opt,name=project" json:"project,omitempty"`
	Branch      string       `protobuf:"bytes,2,opt,name=branch" json:"branch,omitempty"`
	Environment *Environment `protobuf:"bytes,3,opt,name=environment" json:"environment,omitempty"`
}

func (m *BranchAutomation) Reset()                    { *m = BranchAutomation{} }
func (m *BranchAutomation) String() string            { return proto.CompactTextString(m) }
func (*BranchAutomation) ProtoMessage()               {}
func (*BranchAutomation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *BranchAutomation) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *BranchAutomation) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *BranchAutomation) GetEnvironment() *Environment {
	if m != nil {
		return m.Environment
	}
	return nil
}

type GetProjectsResponse struct {
	Header   *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Projects []string        `protobuf:"bytes,2,rep,name=projects" json:"projects,omitempty"`
}

func (m *GetProjectsResponse) Reset()                    { *m = GetProjectsResponse{} }
func (m *GetProjectsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetProjectsResponse) ProtoMessage()               {}
func (*GetProjectsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GetProjectsResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetProjectsResponse) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

type GetBuildsRequest struct {
	Header      *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ProjectName string         `protobuf:"bytes,2,opt,name=projectName" json:"projectName,omitempty"`
}

func (m *GetBuildsRequest) Reset()                    { *m = GetBuildsRequest{} }
func (m *GetBuildsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBuildsRequest) ProtoMessage()               {}
func (*GetBuildsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *GetBuildsRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetBuildsRequest) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

type GetBuildsResponse struct {
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Builds []*Build        `protobuf:"bytes,2,rep,name=builds" json:"builds,omitempty"`
}

func (m *GetBuildsResponse) Reset()                    { *m = GetBuildsResponse{} }
func (m *GetBuildsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBuildsResponse) ProtoMessage()               {}
func (*GetBuildsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *GetBuildsResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetBuildsResponse) GetBuilds() []*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

type NewBuildRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Build  *Build         `protobuf:"bytes,2,opt,name=build" json:"build,omitempty"`
}

func (m *NewBuildRequest) Reset()                    { *m = NewBuildRequest{} }
func (m *NewBuildRequest) String() string            { return proto.CompactTextString(m) }
func (*NewBuildRequest) ProtoMessage()               {}
func (*NewBuildRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *NewBuildRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NewBuildRequest) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

type NextJobRequest struct {
	Header      *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Environment string         `protobuf:"bytes,2,opt,name=environment" json:"environment,omitempty"`
}

func (m *NextJobRequest) Reset()                    { *m = NextJobRequest{} }
func (m *NextJobRequest) String() string            { return proto.CompactTextString(m) }
func (*NextJobRequest) ProtoMessage()               {}
func (*NextJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *NextJobRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NextJobRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type NextJobResponse struct {
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Jobs   []*Job          `protobuf:"bytes,2,rep,name=jobs" json:"jobs,omitempty"`
}

func (m *NextJobResponse) Reset()                    { *m = NextJobResponse{} }
func (m *NextJobResponse) String() string            { return proto.CompactTextString(m) }
func (*NextJobResponse) ProtoMessage()               {}
func (*NextJobResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *NextJobResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NextJobResponse) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type JobDoneRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Job    *Job           `protobuf:"bytes,2,opt,name=job" json:"job,omitempty"`
}

func (m *JobDoneRequest) Reset()                    { *m = JobDoneRequest{} }
func (m *JobDoneRequest) String() string            { return proto.CompactTextString(m) }
func (*JobDoneRequest) ProtoMessage()               {}
func (*JobDoneRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *JobDoneRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *JobDoneRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type Build struct {
	ProjectName    string            `protobuf:"bytes,1,opt,name=projectName" json:"projectName,omitempty"`
	BuildId        string            `protobuf:"bytes,2,opt,name=buildId" json:"buildId,omitempty"`
	BuildURL       string            `protobuf:"bytes,3,opt,name=buildURL" json:"buildURL,omitempty"`
	BuildSystemURL string            `protobuf:"bytes,4,opt,name=buildSystemURL" json:"buildSystemURL,omitempty"`
	BranchName     string            `protobuf:"bytes,5,opt,name=branchName" json:"branchName,omitempty"`
	CreatedAt      int64             `protobuf:"varint,6,opt,name=createdAt" json:"createdAt,omitempty"`
	Files          map[string]string `protobuf:"bytes,7,rep,name=files" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Build) Reset()                    { *m = Build{} }
func (m *Build) String() string            { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()               {}
func (*Build) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *Build) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *Build) GetBuildId() string {
	if m != nil {
		return m.BuildId
	}
	return ""
}

func (m *Build) GetBuildURL() string {
	if m != nil {
		return m.BuildURL
	}
	return ""
}

func (m *Build) GetBuildSystemURL() string {
	if m != nil {
		return m.BuildSystemURL
	}
	return ""
}

func (m *Build) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *Build) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Build) GetFiles() map[string]string {
	if m != nil {
		return m.Files
	}
	return nil
}

type Project struct {
	ProjectName string   `protobuf:"bytes,1,opt,name=projectName" json:"projectName,omitempty"`
	Builds      []*Build `protobuf:"bytes,2,rep,name=builds" json:"builds,omitempty"`
}

func (m *Project) Reset()                    { *m = Project{} }
func (m *Project) String() string            { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()               {}
func (*Project) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *Project) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *Project) GetBuilds() []*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

type StandardRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *StandardRequest) Reset()                    { *m = StandardRequest{} }
func (m *StandardRequest) String() string            { return proto.CompactTextString(m) }
func (*StandardRequest) ProtoMessage()               {}
func (*StandardRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *StandardRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type StandardResponse struct {
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *StandardResponse) Reset()                    { *m = StandardResponse{} }
func (m *StandardResponse) String() string            { return proto.CompactTextString(m) }
func (*StandardResponse) ProtoMessage()               {}
func (*StandardResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *StandardResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type RequestHeader struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *RequestHeader) Reset()                    { *m = RequestHeader{} }
func (m *RequestHeader) String() string            { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()               {}
func (*RequestHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *RequestHeader) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ResponseHeader struct {
	Success bool     `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Errors  []*Error `protobuf:"bytes,2,rep,name=errors" json:"errors,omitempty"`
}

func (m *ResponseHeader) Reset()                    { *m = ResponseHeader{} }
func (m *ResponseHeader) String() string            { return proto.CompactTextString(m) }
func (*ResponseHeader) ProtoMessage()               {}
func (*ResponseHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ResponseHeader) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ResponseHeader) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type Error struct {
	Code    string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateUserRequest)(nil), "protobuf.CreateUserRequest")
	proto.RegisterType((*User)(nil), "protobuf.User")
	proto.RegisterType((*LoginRequest)(nil), "protobuf.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "protobuf.LoginResponse")
	proto.RegisterType((*GetJobsRequest)(nil), "protobuf.GetJobsRequest")
	proto.RegisterType((*GetJobsResponse)(nil), "protobuf.GetJobsResponse")
	proto.RegisterType((*Job)(nil), "protobuf.Job")
	proto.RegisterType((*Environment)(nil), "protobuf.Environment")
	proto.RegisterType((*RegisterEnvironmentRequest)(nil), "protobuf.RegisterEnvironmentRequest")
	proto.RegisterType((*GetEnvironmentResponse)(nil), "protobuf.GetEnvironmentResponse")
	proto.RegisterType((*DeleteEnvironmentRequest)(nil), "protobuf.DeleteEnvironmentRequest")
	proto.RegisterType((*DeployRequest)(nil), "protobuf.DeployRequest")
	proto.RegisterType((*DeployResponse)(nil), "protobuf.DeployResponse")
	proto.RegisterType((*RegisterAutomationRequest)(nil), "protobuf.RegisterAutomationRequest")
	proto.RegisterType((*GetAutomationsRequest)(nil), "protobuf.GetAutomationsRequest")
	proto.RegisterType((*GetAutomationsResponse)(nil), "protobuf.GetAutomationsResponse")
	proto.RegisterType((*DeleteAutomationRequest)(nil), "protobuf.DeleteAutomationRequest")
	proto.RegisterType((*Automation)(nil), "protobuf.Automation")
	proto.RegisterType((*BranchAutomation)(nil), "protobuf.BranchAutomation")
	proto.RegisterType((*GetProjectsResponse)(nil), "protobuf.GetProjectsResponse")
	proto.RegisterType((*GetBuildsRequest)(nil), "protobuf.GetBuildsRequest")
	proto.RegisterType((*GetBuildsResponse)(nil), "protobuf.GetBuildsResponse")
	proto.RegisterType((*NewBuildRequest)(nil), "protobuf.NewBuildRequest")
	proto.RegisterType((*NextJobRequest)(nil), "protobuf.NextJobRequest")
	proto.RegisterType((*NextJobResponse)(nil), "protobuf.NextJobResponse")
	proto.RegisterType((*JobDoneRequest)(nil), "protobuf.JobDoneRequest")
	proto.RegisterType((*Build)(nil), "protobuf.Build")
	proto.RegisterType((*Project)(nil), "protobuf.Project")
	proto.RegisterType((*StandardRequest)(nil), "protobuf.StandardRequest")
	proto.RegisterType((*StandardResponse)(nil), "protobuf.StandardResponse")
	proto.RegisterType((*RequestHeader)(nil), "protobuf.RequestHeader")
	proto.RegisterType((*ResponseHeader)(nil), "protobuf.ResponseHeader")
	proto.RegisterType((*Error)(nil), "protobuf.Error")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DeploiServer service

type DeploiServerClient interface {
	RegisterNewBuild(ctx context.Context, in *NewBuildRequest, opts ...grpc.CallOption) (*StandardResponse, error)
	GetNextJobs(ctx context.Context, in *NextJobRequest, opts ...grpc.CallOption) (*NextJobResponse, error)
	MarkJobDone(ctx context.Context, in *JobDoneRequest, opts ...grpc.CallOption) (*StandardResponse, error)
	GetProjects(ctx context.Context, in *StandardRequest, opts ...grpc.CallOption) (*GetProjectsResponse, error)
	GetBuilds(ctx context.Context, in *GetBuildsRequest, opts ...grpc.CallOption) (*GetBuildsResponse, error)
	DeployBuild(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*DeployResponse, error)
	RegisterAutomation(ctx context.Context, in *RegisterAutomationRequest, opts ...grpc.CallOption) (*StandardResponse, error)
	DeleteAutomation(ctx context.Context, in *DeleteAutomationRequest, opts ...grpc.CallOption) (*StandardResponse, error)
	GetAutomations(ctx context.Context, in *GetAutomationsRequest, opts ...grpc.CallOption) (*GetAutomationsResponse, error)
	RegisterEnvironment(ctx context.Context, in *RegisterEnvironmentRequest, opts ...grpc.CallOption) (*StandardResponse, error)
	GetEnvironments(ctx context.Context, in *StandardRequest, opts ...grpc.CallOption) (*GetEnvironmentResponse, error)
	DeleteEnvironment(ctx context.Context, in *DeleteEnvironmentRequest, opts ...grpc.CallOption) (*StandardResponse, error)
	GetJobs(ctx context.Context, in *GetJobsRequest, opts ...grpc.CallOption) (*GetJobsResponse, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*StandardResponse, error)
}

type deploiServerClient struct {
	cc *grpc.ClientConn
}

func NewDeploiServerClient(cc *grpc.ClientConn) DeploiServerClient {
	return &deploiServerClient{cc}
}

func (c *deploiServerClient) RegisterNewBuild(ctx context.Context, in *NewBuildRequest, opts ...grpc.CallOption) (*StandardResponse, error) {
	out := new(StandardResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/RegisterNewBuild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) GetNextJobs(ctx context.Context, in *NextJobRequest, opts ...grpc.CallOption) (*NextJobResponse, error) {
	out := new(NextJobResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/GetNextJobs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) MarkJobDone(ctx context.Context, in *JobDoneRequest, opts ...grpc.CallOption) (*StandardResponse, error) {
	out := new(StandardResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/MarkJobDone", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) GetProjects(ctx context.Context, in *StandardRequest, opts ...grpc.CallOption) (*GetProjectsResponse, error) {
	out := new(GetProjectsResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/GetProjects", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) GetBuilds(ctx context.Context, in *GetBuildsRequest, opts ...grpc.CallOption) (*GetBuildsResponse, error) {
	out := new(GetBuildsResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/GetBuilds", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) DeployBuild(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*DeployResponse, error) {
	out := new(DeployResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/DeployBuild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) RegisterAutomation(ctx context.Context, in *RegisterAutomationRequest, opts ...grpc.CallOption) (*StandardResponse, error) {
	out := new(StandardResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/RegisterAutomation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) DeleteAutomation(ctx context.Context, in *DeleteAutomationRequest, opts ...grpc.CallOption) (*StandardResponse, error) {
	out := new(StandardResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/DeleteAutomation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) GetAutomations(ctx context.Context, in *GetAutomationsRequest, opts ...grpc.CallOption) (*GetAutomationsResponse, error) {
	out := new(GetAutomationsResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/GetAutomations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) RegisterEnvironment(ctx context.Context, in *RegisterEnvironmentRequest, opts ...grpc.CallOption) (*StandardResponse, error) {
	out := new(StandardResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/RegisterEnvironment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) GetEnvironments(ctx context.Context, in *StandardRequest, opts ...grpc.CallOption) (*GetEnvironmentResponse, error) {
	out := new(GetEnvironmentResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/GetEnvironments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) DeleteEnvironment(ctx context.Context, in *DeleteEnvironmentRequest, opts ...grpc.CallOption) (*StandardResponse, error) {
	out := new(StandardResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/DeleteEnvironment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) GetJobs(ctx context.Context, in *GetJobsRequest, opts ...grpc.CallOption) (*GetJobsResponse, error) {
	out := new(GetJobsResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/GetJobs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploiServerClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*StandardResponse, error) {
	out := new(StandardResponse)
	err := grpc.Invoke(ctx, "/protobuf.DeploiServer/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DeploiServer service

type DeploiServerServer interface {
	RegisterNewBuild(context.Context, *NewBuildRequest) (*StandardResponse, error)
	GetNextJobs(context.Context, *NextJobRequest) (*NextJobResponse, error)
	MarkJobDone(context.Context, *JobDoneRequest) (*StandardResponse, error)
	GetProjects(context.Context, *StandardRequest) (*GetProjectsResponse, error)
	GetBuilds(context.Context, *GetBuildsRequest) (*GetBuildsResponse, error)
	DeployBuild(context.Context, *DeployRequest) (*DeployResponse, error)
	RegisterAutomation(context.Context, *RegisterAutomationRequest) (*StandardResponse, error)
	DeleteAutomation(context.Context, *DeleteAutomationRequest) (*StandardResponse, error)
	GetAutomations(context.Context, *GetAutomationsRequest) (*GetAutomationsResponse, error)
	RegisterEnvironment(context.Context, *RegisterEnvironmentRequest) (*StandardResponse, error)
	GetEnvironments(context.Context, *StandardRequest) (*GetEnvironmentResponse, error)
	DeleteEnvironment(context.Context, *DeleteEnvironmentRequest) (*StandardResponse, error)
	GetJobs(context.Context, *GetJobsRequest) (*GetJobsResponse, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*StandardResponse, error)
}

func RegisterDeploiServerServer(s *grpc.Server, srv DeploiServerServer) {
	s.RegisterService(&_DeploiServer_serviceDesc, srv)
}

func _DeploiServer_RegisterNewBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).RegisterNewBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/RegisterNewBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).RegisterNewBuild(ctx, req.(*NewBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_GetNextJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NextJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).GetNextJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/GetNextJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).GetNextJobs(ctx, req.(*NextJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_MarkJobDone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobDoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).MarkJobDone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/MarkJobDone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).MarkJobDone(ctx, req.(*JobDoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_GetProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StandardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).GetProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/GetProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).GetProjects(ctx, req.(*StandardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_GetBuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBuildsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).GetBuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/GetBuilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).GetBuilds(ctx, req.(*GetBuildsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_DeployBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).DeployBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/DeployBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).DeployBuild(ctx, req.(*DeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_RegisterAutomation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterAutomationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).RegisterAutomation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/RegisterAutomation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).RegisterAutomation(ctx, req.(*RegisterAutomationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_DeleteAutomation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAutomationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).DeleteAutomation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/DeleteAutomation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).DeleteAutomation(ctx, req.(*DeleteAutomationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_GetAutomations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAutomationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).GetAutomations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/GetAutomations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).GetAutomations(ctx, req.(*GetAutomationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_RegisterEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).RegisterEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/RegisterEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).RegisterEnvironment(ctx, req.(*RegisterEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_GetEnvironments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StandardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).GetEnvironments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/GetEnvironments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).GetEnvironments(ctx, req.(*StandardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_DeleteEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).DeleteEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/DeleteEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).DeleteEnvironment(ctx, req.(*DeleteEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_GetJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).GetJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/GetJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).GetJobs(ctx, req.(*GetJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeploiServer_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploiServerServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.DeploiServer/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploiServerServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeploiServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.DeploiServer",
	HandlerType: (*DeploiServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterNewBuild",
			Handler:    _DeploiServer_RegisterNewBuild_Handler,
		},
		{
			MethodName: "GetNextJobs",
			Handler:    _DeploiServer_GetNextJobs_Handler,
		},
		{
			MethodName: "MarkJobDone",
			Handler:    _DeploiServer_MarkJobDone_Handler,
		},
		{
			MethodName: "GetProjects",
			Handler:    _DeploiServer_GetProjects_Handler,
		},
		{
			MethodName: "GetBuilds",
			Handler:    _DeploiServer_GetBuilds_Handler,
		},
		{
			MethodName: "DeployBuild",
			Handler:    _DeploiServer_DeployBuild_Handler,
		},
		{
			MethodName: "RegisterAutomation",
			Handler:    _DeploiServer_RegisterAutomation_Handler,
		},
		{
			MethodName: "DeleteAutomation",
			Handler:    _DeploiServer_DeleteAutomation_Handler,
		},
		{
			MethodName: "GetAutomations",
			Handler:    _DeploiServer_GetAutomations_Handler,
		},
		{
			MethodName: "RegisterEnvironment",
			Handler:    _DeploiServer_RegisterEnvironment_Handler,
		},
		{
			MethodName: "GetEnvironments",
			Handler:    _DeploiServer_GetEnvironments_Handler,
		},
		{
			MethodName: "DeleteEnvironment",
			Handler:    _DeploiServer_DeleteEnvironment_Handler,
		},
		{
			MethodName: "GetJobs",
			Handler:    _DeploiServer_GetJobs_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _DeploiServer_Login_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _DeploiServer_CreateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}

func init() { proto.RegisterFile("server.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x18, 0x5b, 0x57, 0xe3, 0x44,
	0x98, 0xb4, 0xb4, 0xb4, 0x5f, 0x4a, 0xe9, 0xce, 0xee, 0x42, 0x88, 0xab, 0xdb, 0x1d, 0x5d, 0xe5,
	0x09, 0xf7, 0xe0, 0x0d, 0xf7, 0x49, 0x10, 0xb6, 0x80, 0x2b, 0x67, 0x4f, 0x90, 0xb3, 0xea, 0x83,
	0xe7, 0x24, 0xed, 0x00, 0x81, 0x36, 0x53, 0x33, 0x53, 0x90, 0x07, 0x5f, 0x3c, 0xea, 0xab, 0x7f,
	0xc3, 0x57, 0x7f, 0x87, 0x7f, 0xca, 0x93, 0xc9, 0x4c, 0x32, 0x49, 0xca, 0xc5, 0xb0, 0x1e, 0x9f,
	0xda, 0xef, 0x32, 0xdf, 0x2d, 0xdf, 0x6d, 0x06, 0x5a, 0x8c, 0x84, 0xe7, 0x24, 0x5c, 0x1d, 0x87,
	0x94, 0x53, 0xd4, 0x10, 0x3f, 0xde, 0xe4, 0x08, 0x9f, 0xc3, 0xbd, 0x2f, 0x43, 0xe2, 0x72, 0x72,
	0xc8, 0x48, 0xe8, 0x90, 0x1f, 0x27, 0x84, 0x71, 0xf4, 0x21, 0xd4, 0x4f, 0x88, 0x3b, 0x20, 0xa1,
	0x65, 0x74, 0x8d, 0x15, 0x73, 0x6d, 0x69, 0x55, 0xf1, 0xaf, 0x4a, 0x96, 0x1d, 0x41, 0x76, 0x24,
	0x1b, 0x7a, 0x00, 0x35, 0x32, 0x72, 0xfd, 0xa1, 0x55, 0xe9, 0x1a, 0x2b, 0x4d, 0x27, 0x06, 0x90,
	0x0d, 0x8d, 0xb1, 0xcb, 0xd8, 0x05, 0x0d, 0x07, 0x56, 0x55, 0x10, 0x12, 0x18, 0xff, 0x00, 0xb3,
	0x91, 0xc6, 0xf4, 0xa4, 0xa1, 0x9f, 0xc4, 0xd0, 0x52, 0x9c, 0x3b, 0x2e, 0x3b, 0x11, 0x62, 0x5b,
	0x4e, 0x06, 0x87, 0x1e, 0x41, 0xb3, 0x2f, 0x2c, 0x1f, 0x6c, 0x70, 0x21, 0xbe, 0xea, 0xa4, 0x08,
	0x7c, 0x01, 0xad, 0x97, 0xf4, 0xd8, 0x0f, 0x4a, 0xbb, 0x64, 0x43, 0x63, 0xc2, 0x48, 0x18, 0xb8,
	0x23, 0x22, 0xbd, 0x4a, 0xe0, 0x6b, 0x1d, 0x7b, 0x0d, 0xf3, 0x52, 0x31, 0x1b, 0xd3, 0x80, 0x11,
	0xf4, 0x2c, 0xa7, 0xd9, 0xd2, 0x35, 0xc7, 0x3c, 0xc5, 0x68, 0x72, 0x7a, 0x46, 0x02, 0x15, 0x4d,
	0x01, 0xe0, 0x33, 0x68, 0xf7, 0x08, 0xdf, 0xa3, 0x1e, 0x2b, 0xed, 0x93, 0x05, 0x73, 0x63, 0x12,
	0x0c, 0xfc, 0xe0, 0x58, 0x88, 0x6e, 0x38, 0x0a, 0x44, 0x6d, 0xa8, 0xf8, 0xca, 0x97, 0x8a, 0x3f,
	0xc0, 0x47, 0xb0, 0x90, 0x28, 0x2b, 0xed, 0xc7, 0x13, 0x98, 0x3d, 0xa5, 0x1e, 0xb3, 0x2a, 0xdd,
	0xea, 0x8a, 0xb9, 0x36, 0x9f, 0xf2, 0xef, 0x51, 0xcf, 0x11, 0x24, 0xfc, 0xb7, 0x01, 0xd5, 0x3d,
	0xea, 0x49, 0xfd, 0x86, 0xd2, 0x8f, 0x3e, 0x03, 0x93, 0x04, 0xe7, 0x7e, 0x48, 0x83, 0x11, 0x09,
	0xb8, 0xb0, 0xd6, 0x5c, 0x7b, 0x98, 0x4a, 0xd8, 0x4e, 0x89, 0x8e, 0xce, 0x89, 0x9e, 0x42, 0xcd,
	0x9b, 0xf8, 0xc3, 0xd8, 0x17, 0x73, 0x6d, 0x21, 0x3d, 0xb2, 0x19, 0xa1, 0x9d, 0x98, 0x9a, 0x4d,
	0x9e, 0xd9, 0x5c, 0xf2, 0xa0, 0x77, 0x00, 0x8e, 0xfc, 0xc0, 0x67, 0x27, 0x82, 0x5c, 0x13, 0x64,
	0x0d, 0x83, 0x16, 0xa1, 0x4e, 0x27, 0x7c, 0x3c, 0xe1, 0x56, 0x5d, 0x24, 0xa6, 0x84, 0xf0, 0x06,
	0x98, 0x9a, 0x61, 0x08, 0xc1, 0xac, 0x48, 0x9f, 0xd8, 0x2d, 0xf1, 0x3f, 0x12, 0x1d, 0xfd, 0xb2,
	0xb1, 0xdb, 0x27, 0x71, 0x64, 0x9a, 0x8e, 0x86, 0xc1, 0xbf, 0x1b, 0x60, 0x3b, 0xe4, 0xd8, 0x67,
	0x9c, 0x84, 0xba, 0x93, 0x65, 0x3f, 0x79, 0xd9, 0x40, 0xe2, 0xdf, 0x0c, 0x58, 0xec, 0x11, 0x9e,
	0xb1, 0xa1, 0x74, 0x26, 0x7c, 0x0e, 0x2d, 0x4d, 0xb6, 0xca, 0x88, 0x2b, 0xcc, 0xc8, 0xb0, 0xe2,
	0x5f, 0x0d, 0xb0, 0xb6, 0xc8, 0x90, 0x70, 0xf2, 0xbf, 0x86, 0xe3, 0xcf, 0x0a, 0xcc, 0x6f, 0x91,
	0xf1, 0x90, 0x5e, 0xde, 0xa9, 0xfa, 0x42, 0x7a, 0x4a, 0xfa, 0x5c, 0x16, 0xb6, 0x02, 0x23, 0x8a,
	0x48, 0xcb, 0x5d, 0x55, 0x82, 0x0a, 0x44, 0xdd, 0xac, 0xbd, 0xb3, 0x82, 0x9a, 0x49, 0xf8, 0x47,
	0xd0, 0x4c, 0xd2, 0x47, 0xa4, 0x6a, 0xd3, 0x49, 0x11, 0x68, 0x1d, 0x6a, 0x47, 0xfe, 0x90, 0x30,
	0xab, 0x2e, 0x22, 0x8e, 0x53, 0x1b, 0x33, 0xce, 0xac, 0xbe, 0x88, 0x98, 0xb6, 0x03, 0x1e, 0x5e,
	0x3a, 0xf1, 0x01, 0x7b, 0x1d, 0x20, 0x45, 0xa2, 0x0e, 0x54, 0xcf, 0xc8, 0xa5, 0xcc, 0xe4, 0xe8,
	0x6f, 0xd4, 0xa4, 0xce, 0xdd, 0xe1, 0x44, 0x35, 0xc7, 0x18, 0x78, 0x5e, 0x59, 0x37, 0xf0, 0xb7,
	0xd0, 0x56, 0xc2, 0xef, 0xd2, 0x02, 0x4f, 0xa9, 0xb7, 0x3b, 0x50, 0xd2, 0x05, 0x80, 0x7f, 0x31,
	0x60, 0x59, 0x15, 0xc7, 0xc6, 0x84, 0xd3, 0x91, 0xcb, 0x7d, 0x5a, 0xbe, 0xc5, 0x7f, 0x0c, 0xe0,
	0x26, 0x52, 0x64, 0x2e, 0x3c, 0x48, 0x0f, 0x69, 0x1a, 0x34, 0x3e, 0xbc, 0x03, 0x0f, 0x7b, 0x84,
	0xa7, 0xc4, 0xd2, 0xed, 0x38, 0x72, 0x67, 0x31, 0x2f, 0xaa, 0x74, 0xc4, 0x3e, 0x05, 0x33, 0x35,
	0x52, 0x55, 0xd8, 0x74, 0x6f, 0x74, 0x46, 0xfc, 0x3d, 0x2c, 0xc5, 0xe5, 0xf5, 0x06, 0x02, 0x1a,
	0x77, 0xf1, 0x4a, 0x32, 0x45, 0x38, 0x40, 0x2a, 0xb5, 0xd0, 0xe3, 0x77, 0xa0, 0xe3, 0x85, 0x6e,
	0xd0, 0x3f, 0xd9, 0xc8, 0x7f, 0x04, 0x5b, 0xeb, 0xda, 0x39, 0x8e, 0x9d, 0x19, 0xa7, 0x70, 0x6a,
	0xb3, 0xa5, 0x7f, 0x48, 0xfc, 0x33, 0x74, 0xf2, 0xa7, 0xf4, 0xda, 0x33, 0xb2, 0xb5, 0xb7, 0x08,
	0xf5, 0x58, 0x9e, 0xb4, 0x5b, 0x42, 0xf9, 0x4e, 0x51, 0xbd, 0x75, 0xa7, 0xe8, 0xc3, 0xfd, 0x1e,
	0xe1, 0xaf, 0x62, 0xf1, 0x77, 0xf9, 0xa2, 0xd1, 0x96, 0x21, 0xa5, 0xc8, 0x41, 0x91, 0xc0, 0x98,
	0x40, 0xa7, 0x47, 0xb8, 0x18, 0x69, 0xe5, 0xd7, 0x81, 0x2e, 0x98, 0x52, 0xe0, 0x7e, 0xba, 0xe5,
	0xe8, 0x28, 0x1c, 0xc0, 0x3d, 0x4d, 0x4d, 0x69, 0x4f, 0x3e, 0x80, 0xba, 0x68, 0x68, 0x2a, 0x2d,
	0x0b, 0x53, 0x59, 0x92, 0xb1, 0x0f, 0x0b, 0xfb, 0xe4, 0x22, 0xc6, 0x95, 0xf5, 0x2a, 0xd9, 0x00,
	0x2a, 0xd7, 0x6d, 0x00, 0xb8, 0x0f, 0xed, 0x7d, 0xf2, 0x53, 0xb4, 0xe2, 0xdc, 0x25, 0x7e, 0xf9,
	0x61, 0x92, 0x6d, 0xce, 0xd1, 0x1a, 0x95, 0x28, 0xf9, 0x2f, 0xd7, 0x28, 0x0f, 0xda, 0x7b, 0xd4,
	0xdb, 0xa2, 0x01, 0x29, 0xed, 0xcc, 0x63, 0xa8, 0x9e, 0x52, 0x4f, 0x06, 0x2d, 0xa7, 0x24, 0xa2,
	0xe0, 0xbf, 0x2a, 0x50, 0x13, 0x11, 0xcc, 0xe7, 0x8d, 0x51, 0xc8, 0x1b, 0x7d, 0xa0, 0x55, 0xb2,
	0x03, 0xcd, 0x86, 0x86, 0xf8, 0x7b, 0xe8, 0xbc, 0x54, 0xab, 0xb3, 0x82, 0xd1, 0xfb, 0xd0, 0x16,
	0xff, 0x0f, 0x2e, 0x19, 0x27, 0xa3, 0x88, 0x23, 0x9e, 0x77, 0x39, 0x6c, 0xb4, 0x43, 0xc5, 0x45,
	0x2a, 0xd4, 0xc7, 0x33, 0x4f, 0xc3, 0x64, 0x97, 0xbb, 0x7a, 0x7e, 0xb9, 0x7b, 0xa6, 0x46, 0xe2,
	0x9c, 0x88, 0xa7, 0x9d, 0xcb, 0x8f, 0x37, 0x3a, 0x0a, 0xbf, 0x81, 0x39, 0xd9, 0x08, 0x6e, 0x11,
	0xb4, 0x5b, 0x57, 0xc9, 0x26, 0x2c, 0x1c, 0x70, 0x37, 0x18, 0xb8, 0x61, 0xe9, 0x2a, 0xc1, 0x5b,
	0xd0, 0x49, 0x65, 0x94, 0x4d, 0x4d, 0xfc, 0x14, 0xe6, 0x33, 0xe2, 0xd3, 0xab, 0x8b, 0xa1, 0x5f,
	0x5d, 0x0e, 0xa0, 0x9d, 0x15, 0x10, 0x25, 0x08, 0x9b, 0xf4, 0xfb, 0x84, 0x31, 0xc1, 0xd9, 0x70,
	0x14, 0x18, 0x45, 0x81, 0x84, 0x21, 0x0d, 0xa7, 0x44, 0x61, 0x3b, 0xc2, 0x3b, 0x92, 0x8c, 0x3f,
	0x81, 0x9a, 0x40, 0x44, 0x6b, 0x76, 0x9f, 0x0e, 0x92, 0x35, 0x3b, 0xfa, 0x1f, 0xc9, 0x1f, 0x11,
	0xc6, 0xdc, 0x63, 0xf5, 0x51, 0x14, 0xb8, 0xf6, 0x47, 0x13, 0x5a, 0x62, 0x3d, 0xf1, 0x0f, 0xc4,
	0x8d, 0x18, 0x7d, 0x05, 0x1d, 0xb5, 0x53, 0xa8, 0xde, 0x83, 0x96, 0x53, 0xa5, 0xb9, 0x7e, 0x64,
	0x6b, 0xf9, 0x92, 0x0f, 0x20, 0x9e, 0x41, 0x5b, 0x60, 0xf6, 0x08, 0x97, 0x35, 0xcf, 0x90, 0xa5,
	0xcb, 0xd1, 0x9b, 0x8d, 0xbd, 0x3c, 0x85, 0x92, 0x48, 0xd9, 0x06, 0xf3, 0x6b, 0x37, 0x3c, 0x93,
	0x25, 0xad, 0x4b, 0xc9, 0x56, 0xf9, 0x0d, 0xc6, 0xec, 0x0a, 0x63, 0xd4, 0x24, 0xd2, 0x9d, 0xca,
	0xa5, 0x8f, 0xfd, 0x76, 0x4a, 0x9a, 0x32, 0xbb, 0xf0, 0x0c, 0x7a, 0x01, 0xcd, 0x64, 0x10, 0x20,
	0x3b, 0xc3, 0x9d, 0x19, 0x42, 0xf6, 0x5b, 0x53, 0x69, 0x89, 0x9c, 0x4d, 0x30, 0xe3, 0xdd, 0x30,
	0x8e, 0xf3, 0xd2, 0x15, 0xfb, 0xa8, 0x6d, 0x15, 0x09, 0x89, 0x8c, 0xd7, 0x80, 0x8a, 0x4b, 0x20,
	0x7a, 0x57, 0x4f, 0xd6, 0x2b, 0x56, 0xc4, 0x1b, 0xe2, 0x75, 0x00, 0x9d, 0xfc, 0x2a, 0x84, 0x9e,
	0xe8, 0x86, 0x4c, 0x5d, 0x93, 0x6e, 0x10, 0x7a, 0x28, 0xae, 0xed, 0xda, 0x8e, 0x87, 0x1e, 0x67,
	0x42, 0x54, 0x5c, 0x24, 0xed, 0xee, 0xd5, 0x0c, 0x89, 0xd8, 0xef, 0xe0, 0xfe, 0x94, 0x6b, 0x22,
	0x7a, 0xaf, 0x18, 0x85, 0xe2, 0xb5, 0xe9, 0x06, 0x8b, 0x5f, 0x89, 0xbb, 0xbf, 0x76, 0xec, 0xda,
	0xd4, 0xc9, 0x1a, 0x3b, 0xe5, 0xba, 0x28, 0x62, 0x70, 0xaf, 0x70, 0x85, 0x43, 0x38, 0x1f, 0xd9,
	0x7f, 0x6d, 0xe8, 0x17, 0x30, 0x27, 0x1f, 0x29, 0xf4, 0x12, 0xc9, 0x3e, 0x92, 0xe8, 0x85, 0x96,
	0x7b, 0xd1, 0xc0, 0x33, 0xe8, 0x39, 0xd4, 0xc4, 0x63, 0x0d, 0x5a, 0x4c, 0xb9, 0xf4, 0x67, 0x23,
	0x7b, 0xa9, 0x80, 0x4f, 0xce, 0xf6, 0x00, 0xd2, 0x97, 0x33, 0xa4, 0xe5, 0x7d, 0xe1, 0x3d, 0xed,
	0x7a, 0x37, 0xbc, 0xba, 0x20, 0x7e, 0xf4, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xa0, 0xe1,
	0x62, 0xa3, 0x13, 0x00, 0x00,
}
